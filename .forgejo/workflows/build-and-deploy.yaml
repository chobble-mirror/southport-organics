name: Build and Deploy to Neocities

on:
  push:
  workflow_dispatch:

env:
  NEOCITIES_API_KEY: ${{ secrets.NEOCITIES_API_KEY }}

jobs:
  build:
    runs-on: native
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: source

      - name: Persist Eleventy .cache
        uses: actions/cache@v4
        with:
          path: ./.cache
          key: ${{ runner.os }}-eleventy-fetch-cache

      - name: Clone template and merge repos
        run: |
          TEMPLATE_REPO="https://git.chobble.com/chobble/chobble-template.git"
          TEMPLATE_PATH="${{ github.workspace }}/template"
          COMBINED_PATH="${{ github.workspace }}/combined"
          DEPLOY_PATH="${{ github.workspace }}/dist"
          CACHE_PATH="${{ github.workspace }}/.cache"

          # Create directories
          mkdir -p "$COMBINED_PATH"
          mkdir -p "$DEPLOY_PATH"
          mkdir -p "$CACHE_PATH"

          # Clone the template repo
          git clone "$TEMPLATE_REPO" "$TEMPLATE_PATH"

          # Copy template files to combined dir
          rsync \
            --recursive \
            --no-perms \
            --delete \
            --exclude=".git" \
            --exclude="node_modules" \
            --exclude="*.md" \
            "$TEMPLATE_PATH/" "$COMBINED_PATH/"

          # Overlay our repo files into combined dir
          rsync \
            --recursive \
            --no-perms \
            --exclude=".git" \
            --exclude="*.nix" \
            --exclude="README.md" \
            --exclude=".forgejo" \
            "${{ github.workspace }}/source/" "$COMBINED_PATH/src/"

          rsync \
            --recursive \
            "$CACHE_PATH" "$COMBINED_PATH/"

          # Save paths for next steps
          echo "COMBINED_PATH=$COMBINED_PATH" >> $GITHUB_ENV
          echo "DEPLOY_PATH=$DEPLOY_PATH" >> $GITHUB_ENV

      - name: Update site.json with secrets
        run: |
          sed -i 's/"formspark_id": null/"formspark_id": "${{ secrets.FORMSPARK_ID }}"/g' "$COMBINED_PATH/src/_data/site.json"
          sed -i 's/"botpoison_public_key": null/"botpoison_public_key": "${{ secrets.BOTPOISON_PUBLIC_KEY }}"/g' "$COMBINED_PATH/src/_data/site.json"

      - name: Build
        id: build
        run: |
          cd $COMBINED_PATH
          nix-fast-build --skip-cached --flake ".#packages.x86_64-linux.site" --no-nom
          cp -r result-/* $DEPLOY_PATH/

      - name: Copy .cache out of result
        run: |
          rsync -a "$DEPLOY_PATH/.cache/" "$CACHE_PATH"

      - name: Copy built site out of result
        run: |
          BUILT_SITE_PATH="${{ github.workspace }}/built-site"
          mkdir -p "$BUILT_SITE_PATH"
          rsync -a --exclude=".cache" "$DEPLOY_PATH/" "$BUILT_SITE_PATH/"
          echo "BUILT_SITE_PATH=$BUILT_SITE_PATH" >> $GITHUB_ENV

      - name: Deploy to Bunny
        uses: R-J-dev/bunny-deploy@v2.0.6
        with:
          access-key: ${{ secrets.BUNNY_ACCESS_KEY }}
          directory-to-upload: "${{ env.BUILT_SITE_PATH }}"
          storage-endpoint: "https://uk.storage.bunnycdn.com"
          storage-zone-name: "southport-organics"
          storage-zone-password: ${{ secrets.BUNNY_STORAGE_ZONE_PASSWORD }}
          concurrency: "5"
          enable-delete-action: true
          enable-purge-pull-zone: true
          pull-zone-id: "3576287"
          replication-timeout: "15000"
